name: Build and deploy code

on: [push, pull_request]

jobs:
  build:
    environment:
      name: testing
    env:
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}
    services:
      postgres:
        image: postgres
        env: 
          POSTGRES_DB: ${{secrets.DATABASE_NAME}}_test
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
        ports:
        - 5432:5432
        # options: >-
        #   --health-cmd "redis-cli ping"
        #   --health-interval 10s
        #   --health-timeout 5s
        #   --health-retries 5
    runs-on: ubuntu-latest
    steps:
      - name: Pulling git repo 
        uses: actions/checkout@v2
      - name: Install python version 3.9
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Update pip
        run: python -m pip install --upgrade pip
      - name: Install all dependencies
        run: pip install -r requirements.txt
      - name: Test pytest
        run: |
          pip install pytest
          pytest
      # - name: Login to DockerHub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{secrets.DOCKER_HUB_USERNAME}}
      #     password:  ${{secrets.DOCKER_HUB_ACCESS_TOKEN}}
      # - name: Build & push
      #   id: docker_build
      #   uses: docker/build-push-action@v2
      #   with:
      #     content: ./
      #     file: ./Dockerfile
      #     push: ACCESS_TOKEN_EXPIRE_MINUTES
      #     tags: ${{secrets.DOCKER_HUB_USERNAME}}/fastapi:latest

  deploy: 
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - name: Deploying
        run: echo 'deploying test'
